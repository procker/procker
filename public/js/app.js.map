{"version":3,"sources":["projects.module.js","projects.controller.js","project.module.js","project.controller.js","noteboard.controller.js","procker.module.js","procker.controller.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC5CA;AACA;AACA;AACA;AACA;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACrFA;AACA;AACA;AACA;AACA;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"app.js","sourcesContent":["(function(){\n    'use strict';\n\n    angular.module('projects',[]);\n})();","(function(){\n    'use strict';\n\n    angular.module('projects')\n        .controller('projectsCtrl', projectsCtrl);\n    projectsCtrl.$inject = ['$http','CSRF_TOKEN'];\n    function projectsCtrl($http, CSRF_TOKEN){\n        var vm = this;\n        vm.projects = [];\n        vm.getProjects = function(){\n            var req = {\n                method:'GET',\n                url: '/project',\n                headers: {\n                    'csrftoken': CSRF_TOKEN\n                }\n            };\n            $http(req).then(function(data){\n                vm.projects = data.data;\n            });\n        };\n        // load the list of projects\n        vm.getProjects();\n        vm.newProject = {\n            name: 'test',\n            description: 'test description'\n        };\n        vm.createProject = function(){\n            var req = {\n                method: 'POST',\n                url: '/project',\n                headers: {\n                    'csrftoken': CSRF_TOKEN\n                },\n                data: vm.newProject\n            };\n            $http(req).then(function(data){\n                console.log(data);\n            });\n            //$http.post('/projects/',vm.newProject,).then(function(response){\n            //    console.log(response);\n            //});\n        }\n    }\n})();","(function(){\n    'use strict';\n\n    angular.module('project',[]);\n})();","(function () {\n    'use strict';\n\n    angular.module('project')\n        .controller('projectCtrl', projectCtrl);\n    projectCtrl.$inject = ['$http', 'PROJECT_ID', 'CSRF_TOKEN'];\n    function projectCtrl($http, PROJECT_ID, CSRF_TOKEN) {\n        var vm = this;\n        vm.getProject = function () {\n            var req = {\n                method: 'GET',\n                url: '/project/' + PROJECT_ID,\n                headers: {\n                    'csrftoken': CSRF_TOKEN\n                }\n            };\n            $http(req).then(function (data) {\n                vm.project = data.data;\n            });\n        };\n        vm.getProject();\n    }\n})();","(function () {\n    'use strict';\n\n    angular.module('project')\n        .controller('noteboardCtrl', noteboardCtrl);\n    noteboardCtrl.$inject = ['$http', 'PROJECT_ID', 'CSRF_TOKEN'];\n    function noteboardCtrl($http, PROJECT_ID, CSRF_TOKEN) {\n        var vm = this;\n        vm.noteboardGroups = [];\n        vm.newGroup = {\n            name: ''\n        };\n        vm.addNewGroup = function () {\n            var req = {\n                method: 'POST',\n                url: '/group',\n                data: {\n                    projectId: PROJECT_ID,\n                    noteboardGroupName: vm.newGroup.name\n                },\n                headers: {\n                    'csrftoken': CSRF_TOKEN\n                }\n            };\n            $http(req).then(function (data) {\n                vm.noteboardGroups.push(data.data);\n                vm.resetNewGroup();\n            });\n        };\n        vm.resetNewGroup = function(){\n            vm.newGroup.name = '';\n        };\n        vm.getGroups = function(){\n            var req = {\n                method: 'get',\n                url: 'noteboard/groups',\n                data: {\n                    projectId: PROJECT_ID\n                },\n                headers: {\n                    'csrftoken': CSRF_TOKEN\n                }\n            };\n            $http(req).then(function (data) {\n                vm.noteboardGroups = data.data;\n            });\n        };\n        vm.getGroups();\n        vm.addNoteToGroup = function(note, groupId){\n            var req = {\n                method: 'post',\n                url: '/note',\n                data: {\n                    projectId: PROJECT_ID,\n                    note: note,\n                    groupId: groupId\n                },\n                headers: {\n                    'csrftoken': CSRF_TOKEN\n                }\n            };\n            $http(req).then(function(data){\n                console.log(data);\n            });\n        };\n        vm.saveNote = function(note, groupId){\n            console.log(note, groupId);\n            var req = {\n                method: 'put',\n                url: '/note/'+note.id,\n                data: {\n                    projectId: PROJECT_ID,\n                    note: note,\n                    groupId: groupId\n                },\n                headers: {\n                    'csrftoken': CSRF_TOKEN\n                }\n\n            };\n            $http(req).then(function(data){\n                console.log(data);\n            });\n        };\n    }\n})();","(function(){\n    'use strict';\n\n    angular.module('procker',['project','projects']);\n})();","(function() {\n    'use strict';\n\n    angular.module('procker')\n        .controller('prockerCtrl', prockerCtrl);\n\n    function prockerCtrl(){\n        var vm = this;\n        vm.name = \"ben\"\n    }\n})();"],"sourceRoot":"/source/"}